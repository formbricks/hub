"use strict";(globalThis.webpackChunk_formbricks_docs=globalThis.webpackChunk_formbricks_docs||[]).push([[803],{37678:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var r=i(39430);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}},74542:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"reference/architecture","title":"Architecture Reference","description":"Technical reference for contributors and those interested in Hub\'s internal design.","source":"@site/docs/reference/architecture.md","sourceDirName":"reference","slug":"/reference/architecture","permalink":"/reference/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/formbricks/hub/tree/main/apps/docs/docs/reference/architecture.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Environment Variables","permalink":"/reference/environment-variables"}}');var s=i(25270),t=i(37678);const l={sidebar_position:2},d="Architecture Reference",c={},a=[{value:"Technology Stack",id:"technology-stack",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Architecture Layers",id:"architecture-layers",level:2},{value:"1. Entry Point (<code>cmd/hub/main.go</code>)",id:"1-entry-point-cmdhubmaingo",level:3},{value:"2. API Layer (<code>internal/api/</code>)",id:"2-api-layer-internalapi",level:3},{value:"3. Middleware (<code>internal/middleware/</code>)",id:"3-middleware-internalmiddleware",level:3},{value:"4. Domain Models (<code>internal/models/</code>)",id:"4-domain-models-internalmodels",level:3},{value:"5. ORM Layer (<code>internal/ent/</code>)",id:"5-orm-layer-internalent",level:3},{value:"6. Webhook System (<code>internal/webhook/</code>)",id:"6-webhook-system-internalwebhook",level:3},{value:"Data Flow",id:"data-flow",level:2},{value:"Create Experience",id:"create-experience",level:3},{value:"List Experiences with Filters",id:"list-experiences-with-filters",level:3},{value:"Database Schema",id:"database-schema",level:2},{value:"ExperienceData Table",id:"experiencedata-table",level:3},{value:"Configuration Management",id:"configuration-management",level:2},{value:"Huma CLI Integration",id:"huma-cli-integration",level:3},{value:"Testing Strategy",id:"testing-strategy",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"Making Changes",id:"making-changes",level:3},{value:"Adding a New Field to ExperienceData",id:"adding-a-new-field-to-experiencedata",level:3},{value:"Adding a New Endpoint",id:"adding-a-new-endpoint",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Database Indexes",id:"database-indexes",level:3},{value:"Connection Pooling",id:"connection-pooling",level:3},{value:"Webhook Async Delivery",id:"webhook-async-delivery",level:3},{value:"Security",id:"security",level:2},{value:"API Key Authentication",id:"api-key-authentication",level:3},{value:"Database Security",id:"database-security",level:3},{value:"Observability",id:"observability",level:2},{value:"Structured Logging",id:"structured-logging",level:3},{value:"Health Checks",id:"health-checks",level:3},{value:"Contributing",id:"contributing",level:2},{value:"Next Steps for Contributors",id:"next-steps-for-contributors",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"architecture-reference",children:"Architecture Reference"})}),"\n",(0,s.jsx)(n.p,{children:"Technical reference for contributors and those interested in Hub's internal design."}),"\n",(0,s.jsx)(n.admonition,{title:"Audience",type:"info",children:(0,s.jsxs)(n.p,{children:["This page is for ",(0,s.jsx)(n.strong,{children:"contributors"})," and ",(0,s.jsx)(n.strong,{children:"advanced users"})," who want to understand Hub's internals. If you're just using Hub, see the ",(0,s.jsx)(n.a,{href:"../quickstart",children:"Quick Start Guide"})," instead."]})}),"\n",(0,s.jsx)(n.h2,{id:"technology-stack",children:"Technology Stack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Language:"})," Go 1.22+"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Web Framework:"})," Huma v2 (OpenAPI-first) + Chi router"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ORM:"})," Ent (type-safe, code generation)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database:"})," PostgreSQL 18"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documentation:"})," OpenAPI 3.1 + Scalar"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testing:"})," Go's built-in testing + testcontainers-go"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"License:"})," Apache 2.0"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"apps/hub/\n\u251c\u2500\u2500 cmd/\n\u2502   \u2514\u2500\u2500 hub/\n\u2502       \u2514\u2500\u2500 main.go              # Entry point, CLI setup\n\u251c\u2500\u2500 internal/\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u2502   \u251c\u2500\u2500 server.go            # HTTP server, Huma setup\n\u2502   \u2502   \u251c\u2500\u2500 experiences.go       # CRUD handlers\n\u2502   \u2502   \u2514\u2500\u2500 types.go             # API request/response types\n\u2502   \u251c\u2500\u2500 config/\n\u2502   \u2502   \u2514\u2500\u2500 config.go            # Configuration management\n\u2502   \u251c\u2500\u2500 ent/\n\u2502   \u2502   \u251c\u2500\u2500 schema/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 experiencedata.go  # Ent schema definition\n\u2502   \u2502   \u2514\u2500\u2500 [generated files]       # Auto-generated by Ent\n\u2502   \u251c\u2500\u2500 middleware/\n\u2502   \u2502   \u251c\u2500\u2500 auth.go              # API key authentication\n\u2502   \u2502   \u251c\u2500\u2500 logging.go           # Structured logging\n\u2502   \u2502   \u2514\u2500\u2500 middleware.go        # Shared middleware\n\u2502   \u251c\u2500\u2500 models/\n\u2502   \u2502   \u2514\u2500\u2500 experience.go        # Domain models (business logic)\n\u2502   \u2514\u2500\u2500 webhook/\n\u2502       \u251c\u2500\u2500 dispatcher.go        # Webhook delivery\n\u2502       \u2514\u2500\u2500 dispatcher_test.go   # Webhook tests\n\u251c\u2500\u2500 docker-compose.yml           # Local PostgreSQL\n\u251c\u2500\u2500 Dockerfile                   # Production image\n\u251c\u2500\u2500 Makefile                     # Dev commands\n\u251c\u2500\u2500 go.mod                       # Go dependencies\n\u2514\u2500\u2500 README.md                    # Developer docs\n"})}),"\n",(0,s.jsx)(n.h2,{id:"architecture-layers",children:"Architecture Layers"}),"\n",(0,s.jsxs)(n.h3,{id:"1-entry-point-cmdhubmaingo",children:["1. Entry Point (",(0,s.jsx)(n.code,{children:"cmd/hub/main.go"}),")"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Parses CLI arguments and environment variables using Huma CLI"}),"\n",(0,s.jsxs)(n.li,{children:["Initializes logger based on ",(0,s.jsx)(n.code,{children:"SERVICE_LOG_LEVEL"})]}),"\n",(0,s.jsx)(n.li,{children:"Connects to PostgreSQL via Ent"}),"\n",(0,s.jsx)(n.li,{children:"Runs database migrations automatically"}),"\n",(0,s.jsx)(n.li,{children:"Creates and starts HTTP server"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"2-api-layer-internalapi",children:["2. API Layer (",(0,s.jsx)(n.code,{children:"internal/api/"}),")"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Responsibilities:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"HTTP request handling"}),"\n",(0,s.jsx)(n.li,{children:"Request validation"}),"\n",(0,s.jsx)(n.li,{children:"Response formatting"}),"\n",(0,s.jsx)(n.li,{children:"OpenAPI documentation generation"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Key Components:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"server.go"})," - Huma API setup, Chi router, middleware registration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"experiences.go"})," - CRUD operation handlers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"types.go"})," - API-specific DTOs (Data Transfer Objects)"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"3-middleware-internalmiddleware",children:["3. Middleware (",(0,s.jsx)(n.code,{children:"internal/middleware/"}),")"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Chain:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Chi middleware (RequestID, RealIP, Recoverer)"}),"\n",(0,s.jsx)(n.li,{children:"Custom logging middleware (structured logs)"}),"\n",(0,s.jsx)(n.li,{children:"Optional API key auth middleware"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Execution order:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Request \u2192 Chi middleware \u2192 Huma API \u2192 Custom middleware \u2192 Handler \u2192 Response\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"4-domain-models-internalmodels",children:["4. Domain Models (",(0,s.jsx)(n.code,{children:"internal/models/"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Purpose:"})," Separate API concerns from business logic."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Flow:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"API Request \u2192 API DTO \u2192 Domain Model \u2192 Ent Entity \u2192 Database\n                \u2193                           \u2191\n            Validation              Database Query\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clean separation of concerns"}),"\n",(0,s.jsx)(n.li,{children:"Easy to add business logic (e.g., calculated fields)"}),"\n",(0,s.jsx)(n.li,{children:"API changes don't directly affect database schema"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"5-orm-layer-internalent",children:["5. ORM Layer (",(0,s.jsx)(n.code,{children:"internal/ent/"}),")"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Ent's role:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type-safe database queries"}),"\n",(0,s.jsx)(n.li,{children:"Auto-generate CRUD methods"}),"\n",(0,s.jsx)(n.li,{children:"Handle migrations automatically"}),"\n",(0,s.jsx)(n.li,{children:"Provide graph traversal (for future relations)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Code generation workflow:"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Define schema in ",(0,s.jsx)(n.code,{children:"internal/ent/schema/experiencedata.go"})]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"make ent-gen"})," to generate code"]}),"\n",(0,s.jsxs)(n.li,{children:["Generated files in ",(0,s.jsx)(n.code,{children:"internal/ent/"})," (committed to Git)"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"6-webhook-system-internalwebhook",children:["6. Webhook System (",(0,s.jsx)(n.code,{children:"internal/webhook/"}),")"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Design:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Async dispatch (doesn't block API responses)"}),"\n",(0,s.jsx)(n.li,{children:"Retry logic with exponential backoff"}),"\n",(0,s.jsx)(n.li,{children:"Concurrent delivery to multiple URLs"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Delivery guarantees:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"At-least-once delivery (with retries)"}),"\n",(0,s.jsx)(n.li,{children:"5-second timeout per attempt"}),"\n",(0,s.jsx)(n.li,{children:"3 total attempts (1 initial + 2 retries)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-flow",children:"Data Flow"}),"\n",(0,s.jsx)(n.h3,{id:"create-experience",children:"Create Experience"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"1. POST /v1/experiences\n   \u2193\n2. Huma validates request against OpenAPI spec\n   \u2193\n3. Handler receives CreateExperienceInput\n   \u2193\n4. Convert API DTO to Ent builder\n   \u2193\n5. Save to PostgreSQL via Ent\n   \u2193\n6. Convert Ent entity \u2192 Domain model \u2192 API response\n   \u2193\n7. Dispatch webhook asynchronously\n   \u2193\n8. Return 201 Created with experience data\n"})}),"\n",(0,s.jsx)(n.h3,{id:"list-experiences-with-filters",children:"List Experiences with Filters"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"1. GET /v1/experiences?source_type=survey&limit=50\n   \u2193\n2. Huma parses and validates query parameters\n   \u2193\n3. Handler builds Ent query with filters\n   \u2193\n4. Execute query with pagination\n   \u2193\n5. Get total count (separate query)\n   \u2193\n6. Convert results to API format\n   \u2193\n7. Return paginated response\n"})}),"\n",(0,s.jsx)(n.h2,{id:"database-schema",children:"Database Schema"}),"\n",(0,s.jsx)(n.h3,{id:"experiencedata-table",children:"ExperienceData Table"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE experience_data (\n  -- Primary key\n  id UUID PRIMARY KEY DEFAULT gen_uuidv7(),\n  \n  -- Timestamps\n  collected_at TIMESTAMP NOT NULL DEFAULT NOW(),\n  created_at TIMESTAMP NOT NULL DEFAULT NOW(),\n  updated_at TIMESTAMP NOT NULL DEFAULT NOW(),\n  \n  -- Source information\n  source_type VARCHAR NOT NULL,\n  source_id VARCHAR,\n  source_name VARCHAR,\n  \n  -- Field information\n  field_id VARCHAR NOT NULL,\n  field_label VARCHAR,\n  field_type VARCHAR NOT NULL,\n  \n  -- Response values\n  value_text TEXT,\n  value_number DOUBLE PRECISION,\n  value_boolean BOOLEAN,\n  value_date TIMESTAMP,\n  value_json JSONB,\n  \n  -- Metadata\n  metadata JSONB,\n  language VARCHAR(10),\n  user_identifier VARCHAR\n);\n\n-- Indexes for analytics\nCREATE INDEX idx_source_type ON experience_data(source_type);\nCREATE INDEX idx_source_id ON experience_data(source_id);\nCREATE INDEX idx_collected_at ON experience_data(collected_at);\nCREATE INDEX idx_field_type ON experience_data(field_type);\nCREATE INDEX idx_value_number ON experience_data(value_number);\nCREATE INDEX idx_user_identifier ON experience_data(user_identifier);\n\n-- Composite indexes\nCREATE INDEX idx_source_collected ON experience_data(source_type, source_id, collected_at);\nCREATE INDEX idx_field_collected ON experience_data(field_type, collected_at);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,s.jsx)(n.h3,{id:"huma-cli-integration",children:"Huma CLI Integration"}),"\n",(0,s.jsxs)(n.p,{children:["Hub uses Huma's built-in CLI with the ",(0,s.jsx)(n.code,{children:"SERVICE_"})," prefix convention:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'type Options struct {\n    Port        int    `help:"Port to listen on" default:"8080"`\n    DatabaseURL string `help:"PostgreSQL connection URL" required:"true"`\n    APIKey      string `help:"Optional API key" default:""`\n    // ...\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Environment variable mapping:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SERVICE_PORT"})," \u2192 ",(0,s.jsx)(n.code,{children:"Options.Port"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SERVICE_DATABASE_URL"})," \u2192 ",(0,s.jsx)(n.code,{children:"Options.DatabaseURL"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SERVICE_API_KEY"})," \u2192 ",(0,s.jsx)(n.code,{children:"Options.APIKey"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-strategy",children:"Testing Strategy"}),"\n",(0,s.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,s.jsx)(n.p,{children:"Test individual functions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// internal/webhook/dispatcher_test.go\nfunc TestDispatcher_Dispatch(t *testing.T) {\n    // Test webhook delivery logic\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,s.jsx)(n.p,{children:"Test API endpoints with real database:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"// internal/api/experiences_test.go\nfunc TestCreateExperience(t *testing.T) {\n    // Uses testcontainers-go for real PostgreSQL\n    // Tests full request \u2192 response flow\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why testcontainers?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Test against real PostgreSQL (production parity)"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Automatic cleanup after tests"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 CI/CD friendly (GitHub Actions)"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 No mocking database behavior"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,s.jsx)(n.h3,{id:"making-changes",children:"Making Changes"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Edit code"})," in ",(0,s.jsx)(n.code,{children:"internal/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Hot reload"})," via Air (automatic restart)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test locally"})," against PostgreSQL in Docker"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Run tests"}),": ",(0,s.jsx)(n.code,{children:"make test"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Check types"}),": ",(0,s.jsx)(n.code,{children:"go build ./cmd/hub"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"adding-a-new-field-to-experiencedata",children:"Adding a New Field to ExperienceData"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Edit ",(0,s.jsx)(n.code,{children:"internal/ent/schema/experiencedata.go"})]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"make ent-gen"})," to regenerate code"]}),"\n",(0,s.jsx)(n.li,{children:"Restart service (migrations run automatically)"}),"\n",(0,s.jsxs)(n.li,{children:["Update API types in ",(0,s.jsx)(n.code,{children:"internal/api/types.go"})]}),"\n",(0,s.jsxs)(n.li,{children:["Update handlers in ",(0,s.jsx)(n.code,{children:"internal/api/experiences.go"})]}),"\n",(0,s.jsx)(n.li,{children:"Update tests"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"adding-a-new-endpoint",children:"Adding a New Endpoint"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Define operation in ",(0,s.jsx)(n.code,{children:"internal/api/experiences.go"}),":","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'huma.Register(api, huma.Operation{\n    OperationID: "my-operation",\n    Method:      "GET",\n    Path:        "/v1/my-endpoint",\n    // ...\n}, handlerFunc)\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Create input/output types in ",(0,s.jsx)(n.code,{children:"internal/api/types.go"})]}),"\n",(0,s.jsx)(n.li,{children:"Implement handler logic"}),"\n",(0,s.jsxs)(n.li,{children:["Write tests in ",(0,s.jsx)(n.code,{children:"internal/api/*_test.go"})]}),"\n",(0,s.jsx)(n.li,{children:"OpenAPI docs auto-generate"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"database-indexes",children:"Database Indexes"}),"\n",(0,s.jsx)(n.p,{children:"Pre-created indexes optimize common queries:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Time-range queries (",(0,s.jsx)(n.code,{children:"collected_at"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Filtering by source (",(0,s.jsx)(n.code,{children:"source_type"}),", ",(0,s.jsx)(n.code,{children:"source_id"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Numeric aggregations (",(0,s.jsx)(n.code,{children:"value_number"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"connection-pooling",children:"Connection Pooling"}),"\n",(0,s.jsx)(n.p,{children:"PostgreSQL driver handles connection pooling automatically. Configure via connection string:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"?pool_max_conns=20&pool_min_conns=5\n"})}),"\n",(0,s.jsx)(n.h3,{id:"webhook-async-delivery",children:"Webhook Async Delivery"}),"\n",(0,s.jsx)(n.p,{children:"Webhooks don't block API responses. They're dispatched in goroutines with timeout and retry logic."}),"\n",(0,s.jsx)(n.h2,{id:"security",children:"Security"}),"\n",(0,s.jsx)(n.h3,{id:"api-key-authentication",children:"API Key Authentication"}),"\n",(0,s.jsxs)(n.p,{children:["Simple shared-secret authentication via ",(0,s.jsx)(n.code,{children:"X-API-Key"})," header. For production, consider:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"API Gateway (AWS API Gateway, Kong, Traefik)"}),"\n",(0,s.jsx)(n.li,{children:"OAuth 2.0 / JWT"}),"\n",(0,s.jsx)(n.li,{children:"mTLS for service-to-service"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"database-security",children:"Database Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use parameterized queries (Ent does this automatically)"}),"\n",(0,s.jsx)(n.li,{children:"Never log sensitive data"}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"sslmode=require"})," in production"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"observability",children:"Observability"}),"\n",(0,s.jsx)(n.h3,{id:"structured-logging",children:"Structured Logging"}),"\n",(0,s.jsxs)(n.p,{children:["All logs use ",(0,s.jsx)(n.code,{children:"slog"})," (Go 1.21+):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "time": "2025-10-15T12:34:56Z",\n  "level": "INFO",\n  "msg": "experience created",\n  "id": "01932c8a-8b9e-7000-8000-000000000001",\n  "source_type": "survey"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"health-checks",children:"Health Checks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /health"})," - Always returns ",(0,s.jsx)(n.code,{children:'{"status":"ok"}'})]}),"\n",(0,s.jsx)(n.li,{children:"Database connectivity checked on startup only"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://github.com/formbricks/formbricks-rewrite/blob/main/CONTRIBUTING.md",children:"CONTRIBUTING.md"})," for:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Code style guidelines"}),"\n",(0,s.jsx)(n.li,{children:"Pull request process"}),"\n",(0,s.jsx)(n.li,{children:"Testing requirements"}),"\n",(0,s.jsx)(n.li,{children:"Community guidelines"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps-for-contributors",children:"Next Steps for Contributors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Set up locally"}),": ",(0,s.jsx)(n.a,{href:"../quickstart",children:"Quick Start Guide"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Explore codebase"}),": ",(0,s.jsx)(n.code,{children:"apps/hub/internal/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Run tests"}),": ",(0,s.jsx)(n.code,{children:"make test"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GitHub Discussions"}),": ",(0,s.jsx)(n.a,{href:"https://github.com/formbricks/hub/discussions",children:"Ask questions"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);