"use strict";(globalThis.webpackChunk_formbricks_docs=globalThis.webpackChunk_formbricks_docs||[]).push([[308],{35512:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"core-concepts/ai-enrichment","title":"AI Enrichment","description":"Turn raw text feedback into actionable insights automatically. Hub uses OpenAI to extract sentiment, emotion, and topics from every text response\u2014no manual tagging required.","source":"@site/docs/core-concepts/ai-enrichment.md","sourceDirName":"core-concepts","slug":"/core-concepts/ai-enrichment","permalink":"/core-concepts/ai-enrichment","draft":false,"unlisted":false,"editUrl":"https://github.com/formbricks/hub/tree/main/apps/docs/docs/core-concepts/ai-enrichment.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Connectors","permalink":"/core-concepts/connectors"},"next":{"title":"Semantic Search","permalink":"/core-concepts/semantic-search"}}');var r=s(25270),t=s(37678);const c={},o="AI Enrichment",l={},d=[{value:"What You Can Do",id:"what-you-can-do",level:2},{value:"What Gets Enriched",id:"what-gets-enriched",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"1. Get an OpenAI API Key",id:"1-get-an-openai-api-key",level:3},{value:"2. Configure Hub",id:"2-configure-hub",level:3},{value:"3. Test It Out",id:"3-test-it-out",level:3},{value:"How It Works",id:"how-it-works",level:2},{value:"Asynchronous Processing",id:"asynchronous-processing",level:3},{value:"Worker Pool Architecture",id:"worker-pool-architecture",level:3},{value:"What Gets Sent to OpenAI",id:"what-gets-sent-to-openai",level:3},{value:"Reliability &amp; Error Handling",id:"reliability--error-handling",level:3},{value:"Webhooks",id:"webhooks",level:2},{value:"Event Flow",id:"event-flow",level:3},{value:"Use Cases",id:"use-cases",level:3},{value:"Example Payload",id:"example-payload",level:3},{value:"Monitoring Enrichment",id:"monitoring-enrichment",level:2},{value:"Check Enrichment Status",id:"check-enrichment-status",level:3},{value:"Enrichment Progress",id:"enrichment-progress",level:3},{value:"Worker Performance",id:"worker-performance",level:3},{value:"Logs",id:"logs",level:3},{value:"Analyzing Enriched Data",id:"analyzing-enriched-data",level:2},{value:"Find Urgent Issues",id:"find-urgent-issues",level:3},{value:"Track Sentiment Trends",id:"track-sentiment-trends",level:3},{value:"Discover Popular Topics",id:"discover-popular-topics",level:3},{value:"Emotion Breakdown",id:"emotion-breakdown",level:3},{value:"Topic + Sentiment Correlation",id:"topic--sentiment-correlation",level:3},{value:"Cost Analysis",id:"cost-analysis",level:2},{value:"Pricing (gpt-4o-mini)",id:"pricing-gpt-4o-mini",level:3},{value:"Typical Usage",id:"typical-usage",level:3},{value:"At Scale",id:"at-scale",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Worker Pool Sizing",id:"worker-pool-sizing",level:3},{value:"Model Selection",id:"model-selection",level:3},{value:"Privacy &amp; Compliance",id:"privacy--compliance",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Enrichment Not Running",id:"enrichment-not-running",level:3},{value:"Slow Enrichment",id:"slow-enrichment",level:3},{value:"Rate Limit Errors",id:"rate-limit-errors",level:3},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ai-enrichment",children:"AI Enrichment"})}),"\n",(0,r.jsx)(n.p,{children:"Turn raw text feedback into actionable insights automatically. Hub uses OpenAI to extract sentiment, emotion, and topics from every text response\u2014no manual tagging required."}),"\n",(0,r.jsx)(n.h2,{id:"what-you-can-do",children:"What You Can Do"}),"\n",(0,r.jsx)(n.p,{children:"With AI enrichment, you can:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83d\udea8 ",(0,r.jsx)(n.strong,{children:"Alert on negative sentiment"})," - Get notified when customers are frustrated or angry"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,r.jsx)(n.strong,{children:"Route by emotion"})," - Send feedback to the right team based on emotional tone"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udcca ",(0,r.jsx)(n.strong,{children:"Analyze trends"})," - Track sentiment over time without manual categorization"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83c\udff7\ufe0f ",(0,r.jsx)(n.strong,{children:"Discover themes"})," - Automatically identify recurring topics (pricing, UI, bugs)"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd0d ",(0,r.jsx)(n.strong,{children:"Query by feeling"}),' - Find all "frustrated" customers or "joyful" feedback']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-gets-enriched",children:"What Gets Enriched"}),"\n",(0,r.jsxs)(n.p,{children:["Hub enriches ",(0,r.jsx)(n.strong,{children:"only text responses"})," (",(0,r.jsx)(n.code,{children:"field_type = 'text'"}),"). Ratings, NPS scores, and other field types pass through unchanged."]}),"\n",(0,r.jsx)(n.p,{children:"For each text response, Hub automatically extracts:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example Values"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sentiment"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Overall polarity"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'"positive"'}),", ",(0,r.jsx)(n.code,{children:'"negative"'}),", ",(0,r.jsx)(n.code,{children:'"neutral"'}),", ",(0,r.jsx)(n.code,{children:'"mixed"'})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sentiment_score"})}),(0,r.jsx)(n.td,{children:"float"}),(0,r.jsx)(n.td,{children:"Confidence (-1.0 to +1.0)"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"-0.8"})," (very negative), ",(0,r.jsx)(n.code,{children:"0.6"})," (positive)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"emotion"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Primary emotional tone"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:'"joy"'}),", ",(0,r.jsx)(n.code,{children:'"frustration"'}),", ",(0,r.jsx)(n.code,{children:'"anger"'}),", ",(0,r.jsx)(n.code,{children:'"sadness"'}),", ",(0,r.jsx)(n.code,{children:'"confusion"'})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"topics"})}),(0,r.jsx)(n.td,{children:"array"}),(0,r.jsx)(n.td,{children:"Key themes/subjects"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'["pricing", "dashboard", "performance", "support"]'})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(n.h3,{id:"1-get-an-openai-api-key",children:"1. Get an OpenAI API Key"}),"\n",(0,r.jsxs)(n.p,{children:["Sign up at ",(0,r.jsx)(n.a,{href:"https://platform.openai.com",children:"platform.openai.com"})," and generate an API key."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cost:"})," ~$0.015 per 1,000 text responses (very affordable at scale)"]}),"\n",(0,r.jsx)(n.h3,{id:"2-configure-hub",children:"2. Configure Hub"}),"\n",(0,r.jsx)(n.p,{children:"Add your OpenAI API key to your environment:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Required - enables AI enrichment\nSERVICE_OPENAI_API_KEY=sk-your-api-key-here\n\n# Optional - customize the enrichment model (default: gpt-4o-mini)\nSERVICE_OPENAI_ENRICHMENT_MODEL=gpt-4o-mini\n"})}),"\n",(0,r.jsx)(n.p,{children:"That's it! Enrichment is now enabled automatically for all text responses."}),"\n",(0,r.jsx)(n.admonition,{title:"Start Simple",type:"tip",children:(0,r.jsx)(n.p,{children:"The default configuration works great for most use cases. Advanced tuning options are available below if needed."})}),"\n",(0,r.jsx)(n.h3,{id:"3-test-it-out",children:"3. Test It Out"}),"\n",(0,r.jsx)(n.p,{children:"Create a text response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/v1/experiences \\\n  -H "Content-Type: application/json" \\\n  -H "X-API-Key: your-api-key" \\\n  -d \'{\n    "source_type": "survey",\n    "field_id": "feedback",\n    "field_label": "What can we improve?",\n    "field_type": "text",\n    "value_text": "The new dashboard is confusing and slow. Really frustrating!"\n  }\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"Within ~5-15 seconds, the enrichment completes. Query the experience to see the results:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl http://localhost:8080/v1/experiences/{id} \\\n  -H "X-API-Key: your-api-key"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Response with AI enrichment:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "01abc...",\n  "value_text": "The new dashboard is confusing and slow. Really frustrating!",\n  "sentiment": "negative",\n  "sentiment_score": -0.8,\n  "emotion": "frustration",\n  "topics": ["dashboard", "ui_design", "performance"],\n  "collected_at": "2025-10-24T10:30:00Z",\n  "created_at": "2025-10-24T10:30:00Z",\n  "updated_at": "2025-10-24T10:30:12Z"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsx)(n.h3,{id:"asynchronous-processing",children:"Asynchronous Processing"}),"\n",(0,r.jsxs)(n.p,{children:["Enrichment happens ",(0,r.jsx)(n.strong,{children:"asynchronously in the background"}),", so your API stays fast:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"POST request arrives"})," \u2192 Experience saved immediately (~20-50ms)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Return 201 Created"})," \u2192 API responds instantly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Job queued"})," \u2192 Enrichment job added to PostgreSQL queue"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Workers process"})," \u2192 Background workers pick up pending jobs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Call OpenAI"})," \u2192 Text sent to ",(0,r.jsx)(n.code,{children:"gpt-4o-mini"})," for analysis"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extract insights"})," \u2192 Parse sentiment, emotion, and topics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update experience"})," \u2192 Enrichment fields populated"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fire webhook"})," \u2192 ",(0,r.jsx)(n.code,{children:"experience.enriched"})," event dispatched"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Result:"})," Your users never wait for AI processing. Enrichment typically completes within 5-15 seconds."]}),"\n",(0,r.jsx)(n.h3,{id:"worker-pool-architecture",children:"Worker Pool Architecture"}),"\n",(0,r.jsxs)(n.p,{children:["Hub uses a ",(0,r.jsx)(n.strong,{children:"pool of concurrent workers"})," to process enrichment jobs efficiently:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"3 workers by default"})," - Process multiple jobs in parallel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PostgreSQL-backed queue"})," - Reliable job storage with retries"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Graceful error handling"})," - Failed enrichments never block your API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic retries"})," - Transient failures (network issues, rate limits) are retried"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"what-gets-sent-to-openai",children:"What Gets Sent to OpenAI"}),"\n",(0,r.jsx)(n.p,{children:"Hub sends the text response with question context (if available) for better topic extraction:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"With question context:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Question: What can we improve?\nResponse: The checkout process is confusing and takes too long\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Without question context:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"The checkout process is confusing and takes too long\n"})}),"\n",(0,r.jsx)(n.p,{children:'Including the question helps the AI extract more accurate topics. For example, "It\'s great!" will generate different topics depending on whether it\'s answering "What did you like?" vs "How was checkout?"'}),"\n",(0,r.jsx)(n.h3,{id:"reliability--error-handling",children:"Reliability & Error Handling"}),"\n",(0,r.jsxs)(n.p,{children:["Hub is designed to ",(0,r.jsx)(n.strong,{children:"never fail"})," because of AI enrichment:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"OpenAI timeout?"})," \u2192 Experience saved, enrichment skipped"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"API rate limit?"})," \u2192 Job retried later"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Network error?"})," \u2192 Job retried with backoff"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"Invalid response?"})," \u2192 Enrichment skipped, logged for debugging"]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c ",(0,r.jsx)(n.strong,{children:"No API key set?"})," \u2192 Enrichment silently disabled"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Your data is ",(0,r.jsx)(n.strong,{children:"always saved"}),", regardless of enrichment status."]}),"\n",(0,r.jsx)(n.h2,{id:"webhooks",children:"Webhooks"}),"\n",(0,r.jsxs)(n.p,{children:["When enrichment completes, Hub automatically sends an ",(0,r.jsx)(n.code,{children:"experience.enriched"})," webhook to all configured endpoints."]}),"\n",(0,r.jsx)(n.h3,{id:"event-flow",children:"Event Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. POST /v1/experiences\n   \u2193\n2. experience.created webhook fires immediately (no enrichment yet)\n   \u2193\n3. Background enrichment processes (5-15 seconds)\n   \u2193\n4. experience.enriched webhook fires (with sentiment, emotion, topics)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alert on negative sentiment"})," - Slack notification for ",(0,r.jsx)(n.code,{children:"sentiment_score < -0.5"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Route by emotion"}),' - Send "anger" feedback to escalation team']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update dashboards"})," - Refresh real-time sentiment charts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trigger workflows"})," - Start automated follow-up for specific topics"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-payload",children:"Example Payload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "event": "experience.enriched",\n  "timestamp": "2025-10-24T10:30:12Z",\n  "data": {\n    "id": "01abc...",\n    "value_text": "The new dashboard is amazing!",\n    "sentiment": "positive",\n    "sentiment_score": 0.95,\n    "emotion": "joy",\n    "topics": ["dashboard", "ui_design"],\n    "field_label": "What do you think?",\n    "collected_at": "2025-10-24T10:30:00Z"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"./webhooks",children:"Learn more about webhooks \u2192"})}),"\n",(0,r.jsx)(n.h2,{id:"monitoring-enrichment",children:"Monitoring Enrichment"}),"\n",(0,r.jsx)(n.h3,{id:"check-enrichment-status",children:"Check Enrichment Status"}),"\n",(0,r.jsxs)(n.p,{children:["Query the ",(0,r.jsx)(n.code,{children:"enrichment_jobs"})," table to monitor background processing:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- View job status counts\nSELECT status, COUNT(*) as count\nFROM enrichment_jobs\nGROUP BY status;\n\n-- Check recent enrichment activity\nSELECT \n  id,\n  status,\n  attempts,\n  created_at,\n  processed_at,\n  EXTRACT(EPOCH FROM (processed_at - created_at)) as processing_seconds\nFROM enrichment_jobs\nORDER BY created_at DESC\nLIMIT 10;\n\n-- Find failed jobs\nSELECT \n  id,\n  experience_id,\n  error,\n  attempts,\n  created_at\nFROM enrichment_jobs\nWHERE status = 'failed'\nORDER BY created_at DESC;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enrichment-progress",children:"Enrichment Progress"}),"\n",(0,r.jsx)(n.p,{children:"Check how many experiences have been enriched:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Overall enrichment progress\nSELECT \n  COUNT(*) FILTER (WHERE sentiment IS NOT NULL) as enriched,\n  COUNT(*) FILTER (WHERE sentiment IS NULL) as not_enriched,\n  COUNT(*) as total,\n  ROUND(100.0 * COUNT(*) FILTER (WHERE sentiment IS NOT NULL) / COUNT(*), 1) as enrichment_percentage\nFROM experience_data\nWHERE field_type = 'text' AND value_text IS NOT NULL;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"worker-performance",children:"Worker Performance"}),"\n",(0,r.jsx)(n.p,{children:"Monitor worker throughput:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Jobs processed per hour\nSELECT \n  DATE_TRUNC('hour', processed_at) as hour,\n  COUNT(*) as jobs_completed,\n  AVG(EXTRACT(EPOCH FROM (processed_at - created_at))) as avg_processing_seconds\nFROM enrichment_jobs\nWHERE status = 'completed'\n  AND processed_at >= NOW() - INTERVAL '24 hours'\nGROUP BY hour\nORDER BY hour DESC;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"logs",children:"Logs"}),"\n",(0,r.jsx)(n.p,{children:"Workers log enrichment activity:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'INFO processing enrichment job worker_id=1 job_id=... experience_id=...\nINFO enrichment completed successfully worker_id=1 sentiment=negative\nWARN enrichment failed worker_id=2 error="context deadline exceeded"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"analyzing-enriched-data",children:"Analyzing Enriched Data"}),"\n",(0,r.jsx)(n.p,{children:"With sentiment, emotion, and topics automatically extracted, you can build powerful analytics queries."}),"\n",(0,r.jsx)(n.h3,{id:"find-urgent-issues",children:"Find Urgent Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Very negative feedback with anger/frustration\nSELECT \n  value_text,\n  sentiment_score,\n  emotion,\n  topics,\n  collected_at\nFROM experience_data\nWHERE sentiment_score < -0.7  -- Very negative\n  AND emotion IN ('anger', 'frustration')\nORDER BY collected_at DESC\nLIMIT 20;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"track-sentiment-trends",children:"Track Sentiment Trends"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Weekly sentiment over time\nSELECT \n  DATE_TRUNC('week', collected_at) as week,\n  AVG(sentiment_score) as avg_sentiment,\n  COUNT(*) as feedback_count\nFROM experience_data\nWHERE sentiment_score IS NOT NULL\nGROUP BY week\nORDER BY week DESC;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"discover-popular-topics",children:"Discover Popular Topics"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Most mentioned topics with average sentiment\nSELECT \n  unnest(topics) as topic,\n  COUNT(*) as mentions,\n  ROUND(AVG(sentiment_score)::numeric, 2) as avg_sentiment\nFROM experience_data\nWHERE topics IS NOT NULL\nGROUP BY topic\nORDER BY mentions DESC\nLIMIT 20;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"emotion-breakdown",children:"Emotion Breakdown"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Distribution of emotions\nSELECT \n  emotion,\n  COUNT(*) as count,\n  ROUND(100.0 * COUNT(*) / SUM(COUNT(*)) OVER (), 1) as percentage\nFROM experience_data\nWHERE emotion IS NOT NULL\nGROUP BY emotion\nORDER BY count DESC;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"topic--sentiment-correlation",children:"Topic + Sentiment Correlation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Which topics correlate with negative sentiment?\nSELECT \n  unnest(topics) as topic,\n  COUNT(*) FILTER (WHERE sentiment = 'negative') as negative_count,\n  COUNT(*) as total_count,\n  ROUND(100.0 * COUNT(*) FILTER (WHERE sentiment = 'negative') / COUNT(*), 1) as negative_percentage\nFROM experience_data\nWHERE topics IS NOT NULL\nGROUP BY topic\nHAVING COUNT(*) >= 10  -- At least 10 mentions\nORDER BY negative_percentage DESC\nLIMIT 20;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"cost-analysis",children:"Cost Analysis"}),"\n",(0,r.jsx)(n.h3,{id:"pricing-gpt-4o-mini",children:"Pricing (gpt-4o-mini)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Input tokens"}),": $0.150 per 1M tokens"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Output tokens"}),": $0.600 per 1M tokens"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"typical-usage",children:"Typical Usage"}),"\n",(0,r.jsx)(n.p,{children:"Average text response: ~50 words \u2248 65 input tokens + 50 output tokens"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cost per 1,000 responses"}),": ~$0.015 ($0.01 USD + $0.03 USD output)"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cost per 100,000 responses"}),": ~$1.50"]}),"\n",(0,r.jsx)(n.h3,{id:"at-scale",children:"At Scale"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Monthly Feedback"}),(0,r.jsx)(n.th,{children:"Enrichment Cost"}),(0,r.jsx)(n.th,{children:"Per Response"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"10,000"}),(0,r.jsx)(n.td,{children:"$0.15"}),(0,r.jsx)(n.td,{children:"$0.000015"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"100,000"}),(0,r.jsx)(n.td,{children:"$1.50"}),(0,r.jsx)(n.td,{children:"$0.000015"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1,000,000"}),(0,r.jsx)(n.td,{children:"$15.00"}),(0,r.jsx)(n.td,{children:"$0.000015"})]})]})]}),"\n",(0,r.jsxs)(n.admonition,{title:"Cost Optimization",type:"tip",children:[(0,r.jsx)(n.p,{children:"For high volumes (1M+ responses/month), consider:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Using prompt caching (10x cheaper on repeated context)"}),"\n",(0,r.jsx)(n.li,{children:"Filtering only critical feedback for enrichment"}),"\n",(0,r.jsx)(n.li,{children:"Batching requests where possible"}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(n.p,{children:"For fine-tuning enrichment behavior:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Worker pool settings\nSERVICE_ENRICHMENT_WORKERS=3                    # Concurrent workers (default: 3)\nSERVICE_ENRICHMENT_POLL_INTERVAL=1              # Poll interval in seconds (default: 1)\n\n# OpenAI settings\nSERVICE_ENRICHMENT_TIMEOUT=10                   # API timeout in seconds (default: 10)\nSERVICE_OPENAI_ENRICHMENT_MODEL=gpt-4o-mini     # Model choice (default)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"worker-pool-sizing",children:"Worker Pool Sizing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Low volume"})," (< 1,000/hour): 1-2 workers sufficient"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Medium volume"})," (1,000-10,000/hour): 3-5 workers recommended"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High volume"})," (10,000+/hour): 5-10 workers + increase poll interval"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"model-selection",children:"Model Selection"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Model"}),(0,r.jsx)(n.th,{children:"Cost"}),(0,r.jsx)(n.th,{children:"Speed"}),(0,r.jsx)(n.th,{children:"Quality"}),(0,r.jsx)(n.th,{children:"Recommended For"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gpt-4o-mini"})}),(0,r.jsx)(n.td,{children:"$"}),(0,r.jsx)(n.td,{children:"Fast"}),(0,r.jsx)(n.td,{children:"Excellent"}),(0,r.jsx)(n.td,{children:"General use (default)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gpt-4o"})}),(0,r.jsx)(n.td,{children:"$$$"}),(0,r.jsx)(n.td,{children:"Slower"}),(0,r.jsx)(n.td,{children:"Superior"}),(0,r.jsx)(n.td,{children:"Complex/nuanced feedback"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"privacy--compliance",children:"Privacy & Compliance"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Important considerations when using OpenAI:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Anonymize PII"})," - Remove names, emails, phone numbers before storing"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Review OpenAI's policies"})," - ",(0,r.jsx)(n.a,{href:"https://openai.com/policies/api-data-usage-policies",children:"Data usage policy"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Check regional regulations"})," - GDPR, CCPA, etc."]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"API data not used for training"})," - OpenAI doesn't train on API data (per their policy)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"For highly sensitive feedback"}),": Consider disabling enrichment or self-hosting open-source models."]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"enrichment-not-running",children:"Enrichment Not Running"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Check API key configuration:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"echo $SERVICE_OPENAI_API_KEY\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Look for startup logs:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"INFO text enrichment enabled model=gpt-4o-mini\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If you see ",(0,r.jsx)(n.code,{children:"text enrichment disabled"}),", the API key isn't set."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test manually:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/v1/experiences \\\n  -H "Content-Type: application/json" \\\n  -H "X-API-Key: your-key" \\\n  -d \'{\n    "source_type": "survey",\n    "field_id": "test",\n    "field_type": "text",\n    "value_text": "This is amazing!"\n  }\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Wait 10-15 seconds, then query the experience. Check for ",(0,r.jsx)(n.code,{children:"sentiment"}),", ",(0,r.jsx)(n.code,{children:"emotion"}),", and ",(0,r.jsx)(n.code,{children:"topics"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"slow-enrichment",children:"Slow Enrichment"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Symptom:"})," Jobs taking 30+ seconds"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common causes:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["OpenAI API slowness (",(0,r.jsx)(n.a,{href:"https://status.openai.com",children:"check status"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Network latency"}),"\n",(0,r.jsx)(n.li,{children:"Rate limiting"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Increase workers: ",(0,r.jsx)(n.code,{children:"SERVICE_ENRICHMENT_WORKERS=5"})]}),"\n",(0,r.jsxs)(n.li,{children:["Reduce timeout: ",(0,r.jsx)(n.code,{children:"SERVICE_ENRICHMENT_TIMEOUT=5"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rate-limit-errors",children:"Rate Limit Errors"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Symptom:"}),' Logs show "429 Too Many Requests"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Upgrade your OpenAI tier: ",(0,r.jsx)(n.a,{href:"https://platform.openai.com/account/limits",children:"platform.openai.com/account/limits"})]}),"\n",(0,r.jsxs)(n.li,{children:["Reduce concurrent workers: ",(0,r.jsx)(n.code,{children:"SERVICE_ENRICHMENT_WORKERS=1"})]}),"\n",(0,r.jsx)(n.li,{children:"Add delays between requests (contact us for custom configuration)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./webhooks",children:"Webhooks \u2192"})," - React to enriched data in real-time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./data-model",children:"Data Model \u2192"})," - Understanding the enriched fields"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./semantic-search",children:"Semantic Search \u2192"})," - Query feedback with natural language"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../api-reference",children:"API Reference \u2192"})," - Explore all endpoints"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},37678:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var i=s(39430);const r={},t=i.createContext(r);function c(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);