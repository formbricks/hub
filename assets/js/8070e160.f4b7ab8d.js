"use strict";(globalThis.webpackChunk_formbricks_docs=globalThis.webpackChunk_formbricks_docs||[]).push([[822],{31488:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"quickstart","title":"Quick Start Guide","description":"Get the Formbricks Hub running with Docker in under 5 minutes.","source":"@site/docs/quickstart.md","sourceDirName":".","slug":"/quickstart","permalink":"/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/formbricks/hub/tree/main/apps/docs/docs/quickstart.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Formbricks Hub","permalink":"/"},"next":{"title":"Data Model","permalink":"/core-concepts/data-model"}}');var i=s(25270),t=s(37678);const c={sidebar_position:2},l="Quick Start Guide",o={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Option 1: Docker Compose (Recommended)",id:"option-1-docker-compose-recommended",level:3},{value:"1. Download the Configuration",id:"1-download-the-configuration",level:4},{value:"2. Configure Environment Variables",id:"2-configure-environment-variables",level:4},{value:"3. Start the Services",id:"3-start-the-services",level:4},{value:"4. Verify Installation",id:"4-verify-installation",level:4},{value:"Option 2: Docker Run (Minimal)",id:"option-2-docker-run-minimal",level:3},{value:"Making Your First API Call",id:"making-your-first-api-call",level:2},{value:"1. Create an Experience",id:"1-create-an-experience",level:3},{value:"2. Create a Text Experience (with AI Enrichment)",id:"2-create-a-text-experience-with-ai-enrichment",level:3},{value:"3. Query Experiences",id:"3-query-experiences",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Database Connection String Format",id:"database-connection-string-format",level:3},{value:"Managing the Service",id:"managing-the-service",level:2},{value:"View Logs",id:"view-logs",level:3},{value:"Stop Services",id:"stop-services",level:3},{value:"Stop and Remove Data",id:"stop-and-remove-data",level:3},{value:"Restart Services",id:"restart-services",level:3},{value:"Update to Latest Version",id:"update-to-latest-version",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Port Already in Use",id:"port-already-in-use",level:3},{value:"Container Fails to Start",id:"container-fails-to-start",level:3},{value:"Database Connection Failed",id:"database-connection-failed",level:3},{value:"Health Check Failing",id:"health-check-failing",level:3},{value:"Cannot Pull Docker Image",id:"cannot-pull-docker-image",level:3},{value:"Data Not Persisting",id:"data-not-persisting",level:3},{value:"Getting Help",id:"getting-help",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"quick-start-guide",children:"Quick Start Guide"})}),"\n",(0,i.jsx)(n.p,{children:"Get the Formbricks Hub running with Docker in under 5 minutes."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docker"})," and ",(0,i.jsx)(n.strong,{children:"Docker Compose"}),": ",(0,i.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Install Docker Desktop"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Text Editor"}),": For editing the ",(0,i.jsx)(n.code,{children:".env"})," file"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.h3,{id:"option-1-docker-compose-recommended",children:"Option 1: Docker Compose (Recommended)"}),"\n",(0,i.jsx)(n.p,{children:"The easiest way to run Formbricks Hub with all dependencies."}),"\n",(0,i.jsx)(n.h4,{id:"1-download-the-configuration",children:"1. Download the Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Create a new directory and download the production Docker Compose file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir formbricks-hub && cd formbricks-hub\ncurl -o docker-compose.yml https://raw.githubusercontent.com/formbricks/hub/main/docker-compose.prod.yml\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or create it manually:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yml"',children:"services:\n  postgres:\n    image: postgres:18-alpine\n    container_name: formbricks_hub_postgres\n    restart: unless-stopped\n    environment:\n      POSTGRES_USER: formbricks\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-formbricks_secure_password}\n      POSTGRES_DB: hub\n    ports:\n      - '5432:5432'\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    healthcheck:\n      test: ['CMD-SHELL', 'pg_isready -U formbricks -d hub']\n      interval: 10s\n      timeout: 5s\n      retries: 5\n    networks:\n      - formbricks_hub\n\n  hub:\n    image: ghcr.io/formbricks/hub:latest\n    container_name: formbricks_hub_api\n    restart: unless-stopped\n    depends_on:\n      postgres:\n        condition: service_healthy\n    environment:\n      SERVICE_DATABASE_URL: postgresql://formbricks:${POSTGRES_PASSWORD:-formbricks_secure_password}@postgres:5432/hub?sslmode=disable\n      SERVICE_API_KEY: ${SERVICE_API_KEY}\n      SERVICE_PORT: ${SERVICE_PORT:-8080}\n      SERVICE_HOST: 0.0.0.0\n      SERVICE_ENVIRONMENT: ${SERVICE_ENVIRONMENT:-production}\n      SERVICE_LOG_LEVEL: ${SERVICE_LOG_LEVEL:-info}\n      SERVICE_OPENAI_API_KEY: ${SERVICE_OPENAI_API_KEY:-}\n      SERVICE_OPENAI_ENRICHMENT_MODEL: ${SERVICE_OPENAI_ENRICHMENT_MODEL:-gpt-4o-mini}\n      SERVICE_OPENAI_EMBEDDING_MODEL: ${SERVICE_OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}\n      SERVICE_WEBHOOK_URLS: ${SERVICE_WEBHOOK_URLS:-}\n    ports:\n      - '8080:8080'\n    healthcheck:\n      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:8080/health']\n      interval: 30s\n      timeout: 5s\n      retries: 3\n      start_period: 10s\n    networks:\n      - formbricks_hub\n\nvolumes:\n  postgres_data:\n    driver: local\n\nnetworks:\n  formbricks_hub:\n    driver: bridge\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2-configure-environment-variables",children:"2. Configure Environment Variables"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:".env"})," file in the same directory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=".env"',children:"# Required: Secure your PostgreSQL database\nPOSTGRES_PASSWORD=your_secure_postgres_password_here\n\n# Required: API authentication key\nSERVICE_API_KEY=your_secure_api_key_here\n\n# Optional: OpenAI API for AI enrichment and semantic search\n# If not provided, text responses will be stored without AI analysis\nSERVICE_OPENAI_API_KEY=sk-your-openai-api-key-here\nSERVICE_OPENAI_ENRICHMENT_MODEL=gpt-4o-mini\nSERVICE_OPENAI_EMBEDDING_MODEL=text-embedding-3-small\n\n# Optional: Server configuration\nSERVICE_PORT=8080\nSERVICE_ENVIRONMENT=production\nSERVICE_LOG_LEVEL=info\n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"Generate Secure Keys",type:"tip",children:[(0,i.jsx)(n.p,{children:"Generate secure passwords and API keys:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# For POSTGRES_PASSWORD\nopenssl rand -base64 32\n\n# For SERVICE_API_KEY\nopenssl rand -base64 32\n"})})]}),"\n",(0,i.jsx)(n.h4,{id:"3-start-the-services",children:"3. Start the Services"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pull the latest Formbricks Hub image from GitHub Container Registry"}),"\n",(0,i.jsx)(n.li,{children:"Start PostgreSQL with persistent storage"}),"\n",(0,i.jsx)(n.li,{children:"Run database migrations automatically"}),"\n",(0,i.jsx)(n.li,{children:"Start the Hub API on port 8080"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"4-verify-installation",children:"4. Verify Installation"}),"\n",(0,i.jsx)(n.p,{children:"Check that both services are healthy:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose ps\n"})}),"\n",(0,i.jsx)(n.p,{children:"Expected output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"NAME                        STATUS              PORTS\nformbricks_hub_api        Up (healthy)        0.0.0.0:8080->8080/tcp\nformbricks_hub_postgres   Up (healthy)        0.0.0.0:5432->5432/tcp\n"})}),"\n",(0,i.jsx)(n.p,{children:"Test the health endpoint:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8080/health\n"})}),"\n",(0,i.jsx)(n.p,{children:"Expected response:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{"status":"ok"}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"option-2-docker-run-minimal",children:"Option 2: Docker Run (Minimal)"}),"\n",(0,i.jsx)(n.p,{children:"If you have an existing PostgreSQL instance, run just the Hub API:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'docker run -d \\\n  --name formbricks-hub \\\n  -p 8080:8080 \\\n  -e SERVICE_DATABASE_URL="postgresql://user:password@host:5432/hub?sslmode=disable" \\\n  -e SERVICE_API_KEY="your-secret-key" \\\n  -e SERVICE_OPENAI_API_KEY="sk-your-openai-key" \\\n  -e SERVICE_LOG_LEVEL="info" \\\n  ghcr.io/formbricks/hub:latest\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Omit ",(0,i.jsx)(n.code,{children:"SERVICE_OPENAI_API_KEY"})," if you don't need AI enrichment features."]})}),"\n",(0,i.jsx)(n.h2,{id:"making-your-first-api-call",children:"Making Your First API Call"}),"\n",(0,i.jsx)(n.h3,{id:"1-create-an-experience",children:"1. Create an Experience"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/v1/experiences \\\n  -H "Content-Type: application/json" \\\n  -H "X-API-Key: your_secure_api_key_here" \\\n  -d \'{\n    "source_type": "survey",\n    "source_id": "my-first-survey",\n    "field_id": "q1",\n    "field_label": "How satisfied are you?",\n    "field_type": "rating",\n    "value_number": 5,\n    "metadata": {\n      "country": "US",\n      "device": "desktop"\n    }\n  }\'\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"API Authentication",type:"info",children:(0,i.jsxs)(n.p,{children:["All API requests require the ",(0,i.jsx)(n.code,{children:"X-API-Key"})," header with your configured ",(0,i.jsx)(n.code,{children:"SERVICE_API_KEY"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:"Expected response:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "id": "01932c8a-8b9e-7000-8000-000000000001",\n  "collected_at": "2025-10-20T12:34:56Z",\n  "created_at": "2025-10-20T12:34:56Z",\n  "source_type": "survey",\n  "source_id": "my-first-survey",\n  "field_id": "q1",\n  "field_type": "rating",\n  "value_number": 5,\n  "metadata": {\n    "country": "US",\n    "device": "desktop"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-create-a-text-experience-with-ai-enrichment",children:"2. Create a Text Experience (with AI Enrichment)"}),"\n",(0,i.jsx)(n.p,{children:"If you've configured OpenAI keys, text responses will be automatically enriched:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8080/v1/experiences \\\n  -H "Content-Type: application/json" \\\n  -H "X-API-Key: your_secure_api_key_here" \\\n  -d \'{\n    "source_type": "survey",\n    "source_id": "my-first-survey",\n    "field_id": "q2",\n    "field_label": "What can we improve?",\n    "field_type": "text",\n    "value_text": "The checkout process was confusing and took too long. Please simplify it!"\n  }\'\n'})}),"\n",(0,i.jsx)(n.p,{children:"Hub will automatically:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Extract sentiment (e.g., "negative")'}),"\n",(0,i.jsx)(n.li,{children:'Detect emotion (e.g., "frustration")'}),"\n",(0,i.jsx)(n.li,{children:'Identify topics (e.g., ["checkout", "user experience"])'}),"\n",(0,i.jsx)(n.li,{children:"Generate embeddings for semantic search"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-query-experiences",children:"3. Query Experiences"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl "http://localhost:8080/v1/experiences?limit=10" \\\n  -H "X-API-Key: your_secure_api_key_here"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Response:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "data": [...],\n  "total": 2,\n  "limit": 10,\n  "offset": 0\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_DATABASE_URL"})}),(0,i.jsx)(n.td,{children:"\u2705 Yes"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"PostgreSQL connection string"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_API_KEY"})}),(0,i.jsx)(n.td,{children:"\u2705 Yes"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"API authentication key"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_PORT"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"8080"})}),(0,i.jsx)(n.td,{children:"HTTP server port"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_HOST"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0.0.0.0"})}),(0,i.jsx)(n.td,{children:"HTTP server host"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_LOG_LEVEL"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"info"})}),(0,i.jsxs)(n.td,{children:["Log level (",(0,i.jsx)(n.code,{children:"debug"}),", ",(0,i.jsx)(n.code,{children:"info"}),", ",(0,i.jsx)(n.code,{children:"warn"}),", ",(0,i.jsx)(n.code,{children:"error"}),")"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_ENVIRONMENT"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"production"})}),(0,i.jsx)(n.td,{children:"Environment name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_OPENAI_API_KEY"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"OpenAI API key (required for AI features)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_OPENAI_ENRICHMENT_MODEL"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"gpt-4o-mini"})}),(0,i.jsx)(n.td,{children:"Model for sentiment/topic analysis"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_OPENAI_EMBEDDING_MODEL"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"text-embedding-3-small"})}),(0,i.jsx)(n.td,{children:"Model for semantic search embeddings"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SERVICE_WEBHOOK_URLS"})}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Comma-separated webhook URLs"})]})]})]}),"\n",(0,i.jsx)(n.admonition,{title:"AI Features",type:"info",children:(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"SERVICE_OPENAI_API_KEY"})," is not provided, Hub will still work but text responses won't be enriched with sentiment/topic analysis or available for semantic search. ",(0,i.jsx)(n.a,{href:"./core-concepts/ai-enrichment",children:"Learn more about AI enrichment \u2192"})]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"./reference/environment-variables",children:"See full environment variable reference \u2192"})}),"\n",(0,i.jsx)(n.h3,{id:"database-connection-string-format",children:"Database Connection String Format"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"postgresql://username:password@host:port/database?sslmode=disable\n"})}),"\n",(0,i.jsx)(n.p,{children:"For Docker Compose (services in same network):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"postgresql://formbricks:password@postgres:5432/hub?sslmode=disable\n"})}),"\n",(0,i.jsx)(n.p,{children:"For external PostgreSQL:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"postgresql://user:pass@db.example.com:5432/hub?sslmode=require\n"})}),"\n",(0,i.jsx)(n.h2,{id:"managing-the-service",children:"Managing the Service"}),"\n",(0,i.jsx)(n.h3,{id:"view-logs",children:"View Logs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# All services\ndocker-compose logs -f\n\n# Just the Hub API\ndocker-compose logs -f hub\n\n# Just PostgreSQL\ndocker-compose logs -f postgres\n"})}),"\n",(0,i.jsx)(n.h3,{id:"stop-services",children:"Stop Services"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose down\n"})}),"\n",(0,i.jsx)(n.h3,{id:"stop-and-remove-data",children:"Stop and Remove Data"}),"\n",(0,i.jsx)(n.admonition,{title:"Data Loss",type:"danger",children:(0,i.jsx)(n.p,{children:"This will delete all stored experiences!"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose down -v\n"})}),"\n",(0,i.jsx)(n.h3,{id:"restart-services",children:"Restart Services"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose restart\n"})}),"\n",(0,i.jsx)(n.h3,{id:"update-to-latest-version",children:"Update to Latest Version"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose pull\ndocker-compose up -d\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)("div",{className:"row",children:[(0,i.jsx)("div",{className:"col col--6 margin-bottom--lg",children:(0,i.jsxs)("div",{className:"card",children:[(0,i.jsx)("div",{className:"card__header",children:(0,i.jsx)("h3",{children:"\ud83d\udcda Core Concepts"})}),(0,i.jsx)("div",{className:"card__body",children:(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"./core-concepts/data-model",children:"Data Model"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"./core-concepts/ai-enrichment",children:"AI Enrichment"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"./core-concepts/webhooks",children:"Webhooks"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"./core-concepts/authentication",children:"Authentication"})})]})})]})}),(0,i.jsx)("div",{className:"col col--6 margin-bottom--lg",children:(0,i.jsxs)("div",{className:"card",children:[(0,i.jsx)("div",{className:"card__header",children:(0,i.jsx)("h3",{children:"\ud83d\ude80 Reference"})}),(0,i.jsx)("div",{className:"card__body",children:(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"./api-reference",children:"API Reference"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"./reference/environment-variables",children:"Environment Variables"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"./reference/architecture",children:"Architecture"})})]})})]})})]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"port-already-in-use",children:"Port Already in Use"}),"\n",(0,i.jsx)(n.p,{children:"If port 8080 or 5432 is occupied:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Change ports in .env\nSERVICE_PORT=8081\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or modify the port mapping in ",(0,i.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"ports:\n  - '8081:8080'  # Host:Container\n"})}),"\n",(0,i.jsx)(n.h3,{id:"container-fails-to-start",children:"Container Fails to Start"}),"\n",(0,i.jsx)(n.p,{children:"Check the logs for errors:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose logs hub\n"})}),"\n",(0,i.jsx)(n.p,{children:"Common issues:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database not ready"}),": Wait for PostgreSQL healthcheck to pass"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Invalid API key"}),": Ensure ",(0,i.jsx)(n.code,{children:"SERVICE_API_KEY"})," is set in ",(0,i.jsx)(n.code,{children:".env"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database connection failed"}),": Check ",(0,i.jsx)(n.code,{children:"SERVICE_DATABASE_URL"})," format"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"database-connection-failed",children:"Database Connection Failed"}),"\n",(0,i.jsx)(n.p,{children:"Verify PostgreSQL is running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose ps postgres\n"})}),"\n",(0,i.jsx)(n.p,{children:"If unhealthy, check PostgreSQL logs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose logs postgres\n"})}),"\n",(0,i.jsx)(n.h3,{id:"health-check-failing",children:"Health Check Failing"}),"\n",(0,i.jsx)(n.p,{children:"Check if the service is listening:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker exec formbricks_hub_api wget -O- http://localhost:8080/health\n"})}),"\n",(0,i.jsx)(n.h3,{id:"cannot-pull-docker-image",children:"Cannot Pull Docker Image"}),"\n",(0,i.jsx)(n.p,{children:"Ensure you have access to GitHub Container Registry:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker pull ghcr.io/formbricks/hub:latest\n"})}),"\n",(0,i.jsx)(n.p,{children:"If authentication is required:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo $GITHUB_TOKEN | docker login ghcr.io -u USERNAME --password-stdin\n"})}),"\n",(0,i.jsx)(n.h3,{id:"data-not-persisting",children:"Data Not Persisting"}),"\n",(0,i.jsx)(n.p,{children:"Verify the volume is mounted:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker volume ls | grep postgres_data\ndocker volume inspect formbricks-hub_postgres_data\n"})}),"\n",(0,i.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Discussions"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/formbricks/hub/discussions",children:"Ask questions and share ideas"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/formbricks/hub/issues",children:"Report bugs or request features"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Reference"}),": ",(0,i.jsx)(n.a,{href:"./api-reference",children:"Interactive documentation"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},37678:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var r=s(39430);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);