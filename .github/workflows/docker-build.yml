name: Docker Build (Reusable)

on:
  workflow_call:
    inputs:
      image-name:
        description: 'Docker image name (e.g., formbricks/hub)'
        required: true
        type: string
      context:
        description: 'Build context path'
        required: false
        type: string
        default: './apps/hub'
      dockerfile:
        description: 'Path to Dockerfile'
        required: false
        type: string
        default: './apps/hub/Dockerfile'
      platforms:
        description: 'Target platforms'
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      push:
        description: 'Push image to registry'
        required: false
        type: boolean
        default: true
      tags-input:
        description: 'Custom tags (comma-separated)'
        required: false
        type: string
        default: ''
      enable-attestation:
        description: 'Enable artifact attestation'
        required: false
        type: boolean
        default: true
    outputs:
      image-tags:
        description: 'Generated image tags'
        value: ${{ jobs.build.outputs.tags }}
      image-digest:
        description: 'Image digest'
        value: ${{ jobs.build.outputs.digest }}

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.image-name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.release.prerelease == false }}
            type=sha,prefix=sha-,enable=${{ github.event_name != 'release' }}
            ${{ inputs.tags-input }}
          labels: |
            org.opencontainers.image.title=Formbricks Hub
            org.opencontainers.image.description=Unified experience data platform with RAG capabilities
            org.opencontainers.image.vendor=Formbricks GmbH

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        if: ${{ inputs.enable-attestation && inputs.push }}
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ inputs.image-name }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Generate build summary
        run: |
          echo "## Docker Image Built 🐳" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ inputs.image-name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | sed 's/,/\n/g' >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Digest:** \`${{ steps.build.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** ${{ inputs.platforms }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ env.REGISTRY }}/${{ inputs.image-name }}:${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

