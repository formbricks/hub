// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/formbricks/formbricks-rewrite/apps/hub/internal/ent/enrichmentjob"
	"github.com/formbricks/formbricks-rewrite/apps/hub/internal/ent/experiencedata"
	"github.com/formbricks/formbricks-rewrite/apps/hub/internal/ent/schema"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	enrichmentjobFields := schema.EnrichmentJob{}.Fields()
	_ = enrichmentjobFields
	// enrichmentjobDescJobType is the schema descriptor for job_type field.
	enrichmentjobDescJobType := enrichmentjobFields[2].Descriptor()
	// enrichmentjob.DefaultJobType holds the default value on creation for the job_type field.
	enrichmentjob.DefaultJobType = enrichmentjobDescJobType.Default.(string)
	// enrichmentjobDescStatus is the schema descriptor for status field.
	enrichmentjobDescStatus := enrichmentjobFields[3].Descriptor()
	// enrichmentjob.DefaultStatus holds the default value on creation for the status field.
	enrichmentjob.DefaultStatus = enrichmentjobDescStatus.Default.(string)
	// enrichmentjobDescAttempts is the schema descriptor for attempts field.
	enrichmentjobDescAttempts := enrichmentjobFields[6].Descriptor()
	// enrichmentjob.DefaultAttempts holds the default value on creation for the attempts field.
	enrichmentjob.DefaultAttempts = enrichmentjobDescAttempts.Default.(int)
	// enrichmentjobDescCreatedAt is the schema descriptor for created_at field.
	enrichmentjobDescCreatedAt := enrichmentjobFields[7].Descriptor()
	// enrichmentjob.DefaultCreatedAt holds the default value on creation for the created_at field.
	enrichmentjob.DefaultCreatedAt = enrichmentjobDescCreatedAt.Default.(func() time.Time)
	// enrichmentjobDescID is the schema descriptor for id field.
	enrichmentjobDescID := enrichmentjobFields[0].Descriptor()
	// enrichmentjob.DefaultID holds the default value on creation for the id field.
	enrichmentjob.DefaultID = enrichmentjobDescID.Default.(func() uuid.UUID)
	experiencedataFields := schema.ExperienceData{}.Fields()
	_ = experiencedataFields
	// experiencedataDescCollectedAt is the schema descriptor for collected_at field.
	experiencedataDescCollectedAt := experiencedataFields[1].Descriptor()
	// experiencedata.DefaultCollectedAt holds the default value on creation for the collected_at field.
	experiencedata.DefaultCollectedAt = experiencedataDescCollectedAt.Default.(func() time.Time)
	// experiencedataDescCreatedAt is the schema descriptor for created_at field.
	experiencedataDescCreatedAt := experiencedataFields[2].Descriptor()
	// experiencedata.DefaultCreatedAt holds the default value on creation for the created_at field.
	experiencedata.DefaultCreatedAt = experiencedataDescCreatedAt.Default.(func() time.Time)
	// experiencedataDescUpdatedAt is the schema descriptor for updated_at field.
	experiencedataDescUpdatedAt := experiencedataFields[3].Descriptor()
	// experiencedata.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	experiencedata.DefaultUpdatedAt = experiencedataDescUpdatedAt.Default.(func() time.Time)
	// experiencedata.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	experiencedata.UpdateDefaultUpdatedAt = experiencedataDescUpdatedAt.UpdateDefault.(func() time.Time)
	// experiencedataDescSourceType is the schema descriptor for source_type field.
	experiencedataDescSourceType := experiencedataFields[4].Descriptor()
	// experiencedata.SourceTypeValidator is a validator for the "source_type" field. It is called by the builders before save.
	experiencedata.SourceTypeValidator = experiencedataDescSourceType.Validators[0].(func(string) error)
	// experiencedataDescFieldID is the schema descriptor for field_id field.
	experiencedataDescFieldID := experiencedataFields[7].Descriptor()
	// experiencedata.FieldIDValidator is a validator for the "field_id" field. It is called by the builders before save.
	experiencedata.FieldIDValidator = experiencedataDescFieldID.Validators[0].(func(string) error)
	// experiencedataDescFieldType is the schema descriptor for field_type field.
	experiencedataDescFieldType := experiencedataFields[9].Descriptor()
	// experiencedata.FieldTypeValidator is a validator for the "field_type" field. It is called by the builders before save.
	experiencedata.FieldTypeValidator = func() func(string) error {
		validators := experiencedataDescFieldType.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(field_type string) error {
			for _, fn := range fns {
				if err := fn(field_type); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// experiencedataDescLanguage is the schema descriptor for language field.
	experiencedataDescLanguage := experiencedataFields[16].Descriptor()
	// experiencedata.LanguageValidator is a validator for the "language" field. It is called by the builders before save.
	experiencedata.LanguageValidator = experiencedataDescLanguage.Validators[0].(func(string) error)
	// experiencedataDescID is the schema descriptor for id field.
	experiencedataDescID := experiencedataFields[0].Descriptor()
	// experiencedata.DefaultID holds the default value on creation for the id field.
	experiencedata.DefaultID = experiencedataDescID.Default.(func() uuid.UUID)
}
