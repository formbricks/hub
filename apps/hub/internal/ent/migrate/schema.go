// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EnrichmentJobsColumns holds the columns for the "enrichment_jobs" table.
	EnrichmentJobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "job_type", Type: field.TypeString, Default: "enrichment"},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "text", Type: field.TypeString, Size: 2147483647},
		{Name: "error", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "attempts", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "processed_at", Type: field.TypeTime, Nullable: true},
		{Name: "experience_id", Type: field.TypeUUID},
	}
	// EnrichmentJobsTable holds the schema information for the "enrichment_jobs" table.
	EnrichmentJobsTable = &schema.Table{
		Name:       "enrichment_jobs",
		Columns:    EnrichmentJobsColumns,
		PrimaryKey: []*schema.Column{EnrichmentJobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "enrichment_jobs_experience_data_experience",
				Columns:    []*schema.Column{EnrichmentJobsColumns[8]},
				RefColumns: []*schema.Column{ExperienceDataColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "enrichmentjob_job_type_status_created_at",
				Unique:  false,
				Columns: []*schema.Column{EnrichmentJobsColumns[1], EnrichmentJobsColumns[2], EnrichmentJobsColumns[6]},
			},
			{
				Name:    "enrichmentjob_experience_id",
				Unique:  false,
				Columns: []*schema.Column{EnrichmentJobsColumns[8]},
			},
		},
	}
	// ExperienceDataColumns holds the columns for the "experience_data" table.
	ExperienceDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "collected_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "source_type", Type: field.TypeString},
		{Name: "source_id", Type: field.TypeString, Nullable: true},
		{Name: "source_name", Type: field.TypeString, Nullable: true},
		{Name: "field_id", Type: field.TypeString},
		{Name: "field_label", Type: field.TypeString, Nullable: true},
		{Name: "field_type", Type: field.TypeString},
		{Name: "value_text", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "value_number", Type: field.TypeFloat64, Nullable: true},
		{Name: "value_boolean", Type: field.TypeBool, Nullable: true},
		{Name: "value_date", Type: field.TypeTime, Nullable: true},
		{Name: "value_json", Type: field.TypeJSON, Nullable: true},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "language", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "sentiment", Type: field.TypeString, Nullable: true},
		{Name: "sentiment_score", Type: field.TypeFloat64, Nullable: true},
		{Name: "emotion", Type: field.TypeString, Nullable: true},
		{Name: "topics", Type: field.TypeJSON, Nullable: true},
		{Name: "user_identifier", Type: field.TypeString, Nullable: true},
		{Name: "embedding", Type: field.TypeOther, Nullable: true, SchemaType: map[string]string{"postgres": "vector(1536)"}},
		{Name: "embedding_model", Type: field.TypeString, Nullable: true},
	}
	// ExperienceDataTable holds the schema information for the "experience_data" table.
	ExperienceDataTable = &schema.Table{
		Name:       "experience_data",
		Columns:    ExperienceDataColumns,
		PrimaryKey: []*schema.Column{ExperienceDataColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "experiencedata_source_type_source_id_collected_at",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[4], ExperienceDataColumns[5], ExperienceDataColumns[1]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"metadata": "GIN",
					},
				},
			},
			{
				Name:    "experiencedata_field_type_collected_at",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[9], ExperienceDataColumns[1]},
			},
			{
				Name:    "experiencedata_value_number",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[11]},
			},
			{
				Name:    "experiencedata_user_identifier",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[21]},
			},
			{
				Name:    "experiencedata_collected_at",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[1]},
			},
			{
				Name:    "experiencedata_sentiment",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[17]},
			},
			{
				Name:    "experiencedata_emotion",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[19]},
			},
			{
				Name:    "experiencedata_embedding",
				Unique:  false,
				Columns: []*schema.Column{ExperienceDataColumns[22]},
				Annotation: &entsql.IndexAnnotation{
					OpClass: "vector_cosine_ops",
					Type:    "hnsw",
				},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EnrichmentJobsTable,
		ExperienceDataTable,
	}
)

func init() {
	EnrichmentJobsTable.ForeignKeys[0].RefTable = ExperienceDataTable
}
