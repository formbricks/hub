# Huma CLI uses SERVICE_ prefix for environment variables
# You can also pass these as command-line args: --port=8080 --database-url=...

# Database Configuration (REQUIRED)
SERVICE_DATABASE_URL=postgres://formbricks:formbricks_dev@localhost:5432/hub_dev?sslmode=disable

# Database Connection Pool (Optional, defaults shown)
# Controls how many connections are maintained to PostgreSQL
SERVICE_DB_MAX_OPEN_CONNS=25      # Max concurrent connections (adjust based on load)
SERVICE_DB_MAX_IDLE_CONNS=5       # Idle connections to keep alive (reduces reconnect overhead)
SERVICE_DB_CONN_MAX_LIFETIME=5    # Minutes before recycling a connection
SERVICE_DB_CONN_MAX_IDLE_TIME=5   # Minutes before closing idle connections

# Server Configuration
SERVICE_PORT=8080
SERVICE_HOST=0.0.0.0

# Webhook Configuration (comma-separated URLs)
SERVICE_WEBHOOK_URLS=

# Environment (development/production)
SERVICE_ENVIRONMENT=development

# Security (Optional)
# If set, all API requests (except /health, /docs) must include X-API-Key header
SERVICE_API_KEY=

# AI Enrichment (Optional)
# If set, open text responses will be enriched with sentiment, emotion, and topics
# Enrichment happens asynchronously in background workers
SERVICE_OPEN_AI_KEY=
SERVICE_OPENAI_ENRICHMENT_MODEL=gpt-4o-mini
SERVICE_ENRICHMENT_TIMEOUT=10
SERVICE_ENRICHMENT_WORKERS=3
SERVICE_ENRICHMENT_POLL_INTERVAL=1

# AI Embeddings (Optional)
# If set (along with SERVICE_OPEN_AI_KEY), text responses are embedded for semantic search
# Embeddings are generated asynchronously and stored in pgvector
# Recommended: text-embedding-3-small (cost-effective, 1536 dims)
# Alternative: text-embedding-3-large (higher accuracy, 3072 dims, 6.5x cost)
SERVICE_OPENAI_EMBEDDING_MODEL=text-embedding-3-small

# Logging (debug/info/warn/error)
SERVICE_LOG_LEVEL=info

# Rate Limiting (protects against DoS and excessive OpenAI usage)
# Per-IP limits prevent single consumer abuse
SERVICE_RATE_LIMIT_PER_IP=100        # Max requests per second per IP
SERVICE_RATE_LIMIT_BURST=200         # Burst allowance (handles temporary spikes)
# Global limits protect overall service
SERVICE_RATE_LIMIT_GLOBAL=1000       # Max requests per second across all IPs
SERVICE_RATE_LIMIT_GLOBAL_BURST=2000 # Global burst allowance



